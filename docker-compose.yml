version: "3"
services:
  database:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - ./volumes/blog-posts/mongo-data:/data/db
    networks:
      - blog-posts

  minio:
    image: minio/minio
    ports:
      - "9000:9000"
      - "9002:9002"
    volumes:
      - ~/factly/blog-posts/minio/data:/export
      - ~/factly/blog-posts/minio/config:/root/.minio
    environment:
      - MINIO_ACCESS_KEY=miniokey
      - MINIO_SECRET_KEY=miniosecret
    networks:
      - blog-posts
    command: server -console-address :9002 /export

  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    volumes:
      - ./wait-for-it.sh:/usr/local/bin/wait-for-it.sh
    networks:
      - blog-posts
    entrypoint: >
      /bin/sh -c " apk add --no-cache bash; wait-for-it.sh minio:9000 -- echo 'Minio is up. Creating the bucket!!'; /usr/bin/mc config host add myminio http://minio:9000 miniokey miniosecret; /usr/bin/mc mb myminio/blog-posts; /usr/bin/mc anonymous set public myminio/blog-posts; exit 0; "

  server:
    build:
      context: ./
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    environment:
      - PORT=8080
      - ACCESSTOKENTTL=15m
      - REFRESHTOKENTTL=1y
      - MONGO_URI=mongodb://database:27017/blog-posts
      - JWT_SECRET=thisasecret
    networks:
      - blog-posts
    depends_on:
      - database
  web:
    build:
      context: ./web
      dockerfile: Dockerfile.dev
    ports:
      - 3000:3000
    environment:
      - BLOG_POSTS_SERVER_URL=http://server:8080
      - NEXT_PUBLIC_BLOG_POSTS_SERVER_URL=http://localhost:8080
      - NEXT_PUBLIC_S3_SECRET_ACCESS_KEY=miniosecret
      - NEXT_PUBLIC_S3_ACCESS_KEY_ID=miniokey
      - NEXT_PUBLIC_S3_ENDPOINT=http://localhost:9000
      - NEXT_PUBLIC_S3_BUCKET_NAME=blog-posts
      - NEXT_PUBLIC_S3_REGION=us-east-1
    networks:
      - blog-posts
networks:
  blog-posts:
